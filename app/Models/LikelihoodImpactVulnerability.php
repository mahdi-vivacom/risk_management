<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class LikelihoodImpactVulnerability extends Model
{
    use HasFactory, SoftDeletes;

    // Define constants for the type field
    const TYPE_LIKELIHOOD = 'Likelihood';
    const TYPE_IMPACT = 'Impact';
    const TYPE_VULNERABILITY = 'Vulnerability';

    // Fillable attributes
    protected $fillable = [
        'type',
        'name',
        'score',
        'definition',
    ];

    // Validation rules for enum values can be provided here as helpers
    public static function getTypeOptions()
    {
        return [
            self::TYPE_LIKELIHOOD,
            self::TYPE_IMPACT,
            self::TYPE_VULNERABILITY,
        ];
    }

    // Optionally, if you want to format or ensure data consistency, use Accessors and Mutators
    public function setTypeAttribute($value)
    {
        // Ensure the type is always capitalized
        $this->attributes['type'] = ucfirst(strtolower($value));
    }

    // Example Accessor if you want to manipulate type when retrieving
    public function getTypeAttribute($value)
    {
        return ucfirst($value); // Return with first letter capitalized
    }
}

